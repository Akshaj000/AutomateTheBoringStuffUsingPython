1. Why are functions advantageous to have in your programs?
   
   It enhances readability and usability.

2. When does the code in a function execute: when the function 
   is defined or when the function is called?
   
   when the function  is called

3. What statement creates a function?
   
   def

4. What is the difference between a function and a function call?
   
   function is a block containing statements to execute.
   function call is a function that calls the function definition.

5. How many global scopes are there in a Python program? How many local scopes?

   one global scope and as many local scope depending on functions  and loops.
   
6. What happens to variables in a local scope when the function call returns?

   The local variable becomes undefined after the function is executed.

7. What is a return value? Can a return value be part of an expression?
   
   return statement ends the function execution. Statements after return is not executed.
   return can be a part of an expression example : return a+b
   
8. If a function does not have a return statement, what is the return value of a call to 
   that function?
   
   None


9. How can you force a variable in a function to refer to the global variable?
   
   using global keyword
   

10. What is the data type of None?

    NoneType
    

11. What does the import areallyourpetsnamederic statement do?
    
    imports all the functions and variables inside the module areallyourpetnamederic
    
    
12. If you had a function named bacon() in a module named spam, 
    how would you call it after importing spam?
    
    spam.bacon()
    
13. How can you prevent a program from crashing when it gets an error?
    
    using exception handling - try and except clause
    
14. What goes in the try clause? What goes in the except clause?
    
    try clause contains the block of code that are to be executed. 
    except close contains block of codes that are to be executed when the code inside try clause
    gives an error.

